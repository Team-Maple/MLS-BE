plugins {
  id 'java'
  id 'org.springframework.boot' version '3.4.5'
  id 'io.spring.dependency-management' version '1.1.7'
  id 'com.gorylenko.gradle-git-properties' version "2.4.1"
}

group = 'com.maple'
version = '0.0.1-SNAPSHOT'

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(21)
  }
}

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

repositories {
  mavenCentral()
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-security'

  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-actuator'
  implementation 'org.springframework.boot:spring-boot-starter-validation'

  implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'

  runtimeOnly 'com.mysql:mysql-connector-j'

  // jwt
  implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
  runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
  runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'

  // jackson
  implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

  // FCM
  implementation("com.google.firebase:firebase-admin:9.2.0")

  // JSoup
  implementation 'org.jsoup:jsoup:1.17.2'

  // QueryDSL
  implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta'
  annotationProcessor "com.querydsl:querydsl-apt:5.1.0:jakarta"
  annotationProcessor "jakarta.annotation:jakarta.annotation-api"
  annotationProcessor "jakarta.persistence:jakarta.persistence-api"

  compileOnly 'org.projectlombok:lombok'
  annotationProcessor 'org.projectlombok:lombok'

  testImplementation 'com.h2database:h2'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.springframework.security:spring-security-test'
  testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.withType(JavaCompile) {
  def generatedDir = layout.buildDirectory.dir("generated/querydsl")
  options.getGeneratedSourceOutputDirectory().set(generatedDir)
}

sourceSets {
  main {
    java {
      srcDirs += [layout.buildDirectory.dir("generated/querydsl")]
    }
  }
}


tasks.named('test') {
  useJUnitPlatform()
}
